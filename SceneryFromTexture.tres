[gd_resource type="VisualShader" load_steps=38 format=3 uid="uid://ci65clqe0v3rk"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/perlin2d.gd" id="1_4bahc"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/generic2d_fractal.gd" id="2_cnceh"]
[ext_resource type="Gradient" path="res://Tracks/MountainGradient.tres" id="3_fg80b"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dsy1e"]
input_name = "color"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_ebypa"]
parameter_name = "Terrain_Height"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ewyu2"]
default_input_values = [1, Vector3(0, 0, 0), 2, 100.0, 3, Vector3(0, 0, 0)]
initialized = true
script = ExtResource("1_4bahc")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3pscm"]
parameter_name = "ExtraNoiseLayer"
hint = 1
default_value_enabled = true
default_value = 0.3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_se0vo"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_deqbq"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_3bnc3"]
default_input_values = [0, 0.0, 1, 0.01, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_486ak"]
parameter_name = "Noise_Layer_2_Scale"
default_value_enabled = true
default_value = 100.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pdt4e"]
parameter_name = "Noise_Layer_3_Scale"
default_value_enabled = true
default_value = 1000.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gxisd"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4nky3"]
default_input_values = [0, 0.0, 1, 0.03]
operator = 2

[sub_resource type="VisualShaderNodeDistanceFade" id="VisualShaderNodeDistanceFade_jc4ql"]
default_input_values = [0, 500.0, 1, 2.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_q2t0d"]
parameter_name = "Noise_Layer_3_Distance"
default_value_enabled = true
default_value = 750.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_88dg1"]
default_input_values = [1, 6, 2, Vector3(2, 2, 0), 3, 2.0, 4, 0.8, 5, 0.5, 6, 0.3, 7, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("2_cnceh")

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_o5aol"]
default_input_values = [1, 1.0, 2, 0.0, 3, 0.1, 4, 0.0]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_8llsy"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_a6dlx"]
parameter_name = "Noise_Size"
default_value_enabled = true
default_value = 20.0

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_v4cbf"]
parameter_name = "ColorMap"
texture_filter = 2
texture_repeat = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_3ifu7"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.25, 4, 0.8]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_63gdx"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.05, 4, 0.6]

[sub_resource type="GradientTexture1D" id="GradientTexture1D_1cwqd"]
gradient = ExtResource("3_fg80b")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_32tcd"]
output_port_for_preview = 0
source = 5
texture = SubResource("GradientTexture1D_1cwqd")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ul0w4"]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ygit6"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wdmne"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_rj8bu"]
parameter_name = "HeightMap"
texture_filter = 1
texture_repeat = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_w1hq0"]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_7hhjc"]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_ibrcl"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kw87t"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ckhrm"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_q0e4m"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cievg"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pn8hg"]
parameter_name = "Terrain_Height"
default_value_enabled = true
default_value = 100.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float Terrain_Height = 100;
uniform sampler2D HeightMap : filter_nearest, repeat_disable;
uniform float Noise_Layer_2_Scale = 100;
uniform float Noise_Layer_3_Scale = 1000;
uniform float Noise_Layer_3_Distance = 750;
uniform sampler2D ColorMap : filter_linear, repeat_disable;


// PerlinNoise2D
float _perlin2dNoiseFunc(vec2 P, vec2 _period_perl2) {
	vec4 Pi = floor(vec4(P, P)) + vec4(0.0, 0.0, 1.0, 1.0);
	vec4 Pf = fract(vec4(P, P)) - vec4(0.0, 0.0, 1.0, 1.0);
	
	if (_period_perl2.x != 0.0 && _period_perl2.y != 0.0)
		Pi = mod(Pi, vec4(_period_perl2, _period_perl2));
	
	Pi = Pi - floor(Pi * (1.0 / 289.0)) * 289.0;
	vec4 ix = Pi.xzxz;
	vec4 iy = Pi.yyww;
	vec4 fx = Pf.xzxz;
	vec4 fy = Pf.yyww;
	
	vec4 i = (((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))-
		floor((((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))*(1.0/289.0))*289.0;
	
	vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
	vec4 gy = abs(gx) - 0.5 ;
	vec4 tx = floor(gx + 0.5);
	gx = gx - tx;
	
	vec2 g00 = vec2(gx.x,gy.x);
	vec2 g10 = vec2(gx.y,gy.y);
	vec2 g01 = vec2(gx.z,gy.z);
	vec2 g11 = vec2(gx.w,gy.w);
	
	vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));
	g00 *= norm.x;
	g01 *= norm.y;
	g10 *= norm.z;
	g11 *= norm.w;
	
	float n00 = dot(g00, vec2(fx.x, fy.x));
	float n10 = dot(g10, vec2(fx.y, fy.y));
	float n01 = dot(g01, vec2(fx.z, fy.z));
	float n11 = dot(g11, vec2(fx.w, fy.w));
	
	vec2 fade_xy = Pf.xy * Pf.xy * Pf.xy * (Pf.xy * (Pf.xy * 6.0 - 15.0) + 10.0);
	vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
	float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
	return 2.3 * n_xy;
}
// FractalGenericNoise2D
float _hash2_gener1c2DFractal(vec2 _p_hash2_gener1c) {
	return (fract(1e4 * sin(17.0 * _p_hash2_gener1c.x + _p_hash2_gener1c.y * 0.1) *
					(0.1 + abs(sin(_p_hash2_gener1c.y * 13.0 + _p_hash2_gener1c.x)))));
}
float _genericNoise2DFractal(vec2 _x_gener1c2D) {
	vec2 _temp_i_gener1c2D = floor(_x_gener1c2D);
	vec2 _temp_f_gener1c2D = fract(_x_gener1c2D);

	float _a_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D);
	float _b_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 0.0));
	float _c_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(0.0, 1.0));
	float _d_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 1.0));
	
	vec2 _u_g1n2 = _temp_f_gener1c2D * _temp_f_gener1c2D * (3.0 - 2.0 * _temp_f_gener1c2D);
	return (mix(_a_g1n2, _b_g1n2, _u_g1n2.x) + (_c_g1n2 - _a_g1n2) *
				_u_g1n2.y * (1.0 - _u_g1n2.x) + (_d_g1n2 - _b_g1n2) * _u_g1n2.x * _u_g1n2.y);
}
float _genericNoise2DFBM(vec2 _uv_gnfbm, int _oct_gnfbm, vec2 _per_gnfbm, float _lac_gnfbm,
						float _persist_gnfbm, float _rot_gnfbm, float _ampl_gnfbm, vec2 _shift_gnfbm) {
	float _v = 0.0;
	float _a = _ampl_gnfbm;
	mat2 _r0t = mat2(vec2(cos(_rot_gnfbm), sin(_rot_gnfbm)), vec2(-sin(_rot_gnfbm), cos(_rot_gnfbm)));
	for (int i = 0; i < _oct_gnfbm; ++i) {
		_v += _a * _genericNoise2DFractal(_uv_gnfbm * _per_gnfbm);
		_uv_gnfbm = _r0t * _uv_gnfbm * _lac_gnfbm + _shift_gnfbm;
		_a *= _persist_gnfbm;
	}
	return _v;
}

void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// Input:25
	vec2 n_out25p0 = UV;


// VectorDecompose:27
	float n_out27p0 = n_out25p0.x;
	float n_out27p1 = n_out25p0.y;


// VectorCompose:28
	vec2 n_out28p0 = vec2(n_out27p1, n_out27p0);


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(HeightMap, n_out28p0);


// FloatParameter:7
	float n_out7p0 = Terrain_Height;


// VectorCompose:23
	float n_in23p0 = 0.00000;
	float n_in23p2 = 0.00000;
	vec3 n_out23p0 = vec3(n_in23p0, n_out7p0, n_in23p2);


// VectorOp:22
	vec3 n_out22p0 = vec3(n_out21p0.xyz) * n_out23p0;


// VectorOp:3
	vec3 n_out3p0 = n_out2p0 + n_out22p0;


// Output:0
	VERTEX = n_out3p0;
	COLOR.rgb = n_out3p0;


}

void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// VectorDecompose:9
	float n_out9p0 = n_out10p0.x;
	float n_out9p1 = n_out10p0.y;
	float n_out9p2 = n_out10p0.z;
	float n_out9p3 = n_out10p0.w;


// ParameterRef:11
	float n_out11p0 = Terrain_Height;


// FloatOp:7
	float n_out7p0 = n_out9p1 / n_out11p0;


// FloatParameter:19
	float n_out19p0 = Noise_Layer_2_Scale;


	float n_out13p0;
// PerlinNoise2D:13
	vec3 n_in13p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in13p3 = vec3(0.00000, 0.00000, 0.00000);
	{
		n_out13p0 = _perlin2dNoiseFunc((UV.xy+n_in13p1.xy)*n_out19p0, n_in13p3.xy);
	}


// FloatOp:16
	float n_in16p1 = 0.10000;
	float n_out16p0 = n_out13p0 * n_in16p1;


// FloatOp:17
	float n_out17p0 = n_out7p0 + n_out16p0;


// FloatParameter:20
	float n_out20p0 = Noise_Layer_3_Scale;


// VectorCompose:29
	vec2 n_out29p0 = vec2(n_out20p0, n_out20p0);


	float n_out27p0;
// FractalGenericNoise2D:27
	int n_in27p1 = 6;
	float n_in27p3 = 2.00000;
	float n_in27p4 = 0.80000;
	float n_in27p5 = 0.50000;
	float n_in27p6 = 0.30000;
	vec3 n_in27p7 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out27p0 = _genericNoise2DFBM(UV.xy, int(n_in27p1), vec3(n_out29p0, 0.0).xy, n_in27p3, n_in27p4, n_in27p5, n_in27p6, n_in27p7.xy);
	}


// FloatParameter:26
	float n_out26p0 = Noise_Layer_3_Distance;


// DistanceFade:25
	float n_in25p1 = 2.00000;
	float n_out25p0 = clamp(smoothstep(n_out26p0, n_in25p1,-VERTEX.z),0.0,1.0);


	float n_out28p0;
// Remap:28
	float n_in28p1 = 1.00000;
	float n_in28p2 = 0.00000;
	float n_in28p3 = 0.10000;
	float n_in28p4 = 0.00000;
	{
		float __input_range = n_in28p2 - n_in28p1;
		float __output_range = n_in28p4 - n_in28p3;
		n_out28p0 = n_in28p3 + __output_range * ((n_out25p0 - n_in28p1) / __input_range);
	}


// FloatOp:23
	float n_out23p0 = n_out27p0 * n_out28p0;


// FloatOp:22
	float n_out22p0 = n_out17p0 + n_out23p0;


// Clamp:18
	float n_in18p1 = 0.01000;
	float n_in18p2 = 1.00000;
	float n_out18p0 = clamp(n_out22p0, n_in18p1, n_in18p2);


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(ColorMap, vec2(n_out18p0));


	float n_out31p0;
// Remap:31
	float n_in31p1 = 0.00000;
	float n_in31p2 = 1.00000;
	float n_in31p3 = 0.25000;
	float n_in31p4 = 0.80000;
	{
		float __input_range = n_in31p2 - n_in31p1;
		float __output_range = n_in31p4 - n_in31p3;
		n_out31p0 = n_in31p3 + __output_range * ((n_out18p0 - n_in31p1) / __input_range);
	}


	float n_out32p0;
// Remap:32
	float n_in32p1 = 0.00000;
	float n_in32p2 = 1.00000;
	float n_in32p3 = 0.05000;
	float n_in32p4 = 0.60000;
	{
		float __input_range = n_in32p2 - n_in32p1;
		float __output_range = n_in32p4 - n_in32p3;
		n_out32p0 = n_in32p3 + __output_range * ((n_out18p0 - n_in32p1) / __input_range);
	}


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ROUGHNESS = n_out31p0;
	SPECULAR = n_out32p0;


}
"
graph_offset = Vector2(-92.807, -243.467)
nodes/vertex/0/position = Vector2(1280, 0)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_wdmne")
nodes/vertex/2/position = Vector2(520, 40)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_cievg")
nodes/vertex/3/position = Vector2(940, 0)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatParameter_pn8hg")
nodes/vertex/7/position = Vector2(-380, 100)
nodes/vertex/20/node = SubResource("VisualShaderNodeTexture2DParameter_rj8bu")
nodes/vertex/20/position = Vector2(-700, -600)
nodes/vertex/21/node = SubResource("VisualShaderNodeTexture_w1hq0")
nodes/vertex/21/position = Vector2(480, -400)
nodes/vertex/22/node = SubResource("VisualShaderNodeVectorOp_7hhjc")
nodes/vertex/22/position = Vector2(680, -200)
nodes/vertex/23/node = SubResource("VisualShaderNodeVectorCompose_ibrcl")
nodes/vertex/23/position = Vector2(260, -80)
nodes/vertex/25/node = SubResource("VisualShaderNodeInput_kw87t")
nodes/vertex/25/position = Vector2(-360, -760)
nodes/vertex/27/node = SubResource("VisualShaderNodeVectorDecompose_ckhrm")
nodes/vertex/27/position = Vector2(-60, -760)
nodes/vertex/28/node = SubResource("VisualShaderNodeVectorCompose_q0e4m")
nodes/vertex/28/position = Vector2(160, -720)
nodes/vertex/connections = PackedInt32Array(20, 0, 21, 2, 2, 0, 3, 0, 3, 0, 0, 0, 21, 0, 22, 0, 7, 0, 23, 1, 22, 0, 3, 1, 25, 0, 27, 0, 3, 0, 0, 6, 27, 0, 28, 1, 27, 1, 28, 0, 28, 0, 21, 0, 23, 0, 22, 1)
nodes/fragment/0/position = Vector2(1120, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_a6dlx")
nodes/fragment/3/position = Vector2(-580, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_32tcd")
nodes/fragment/4/position = Vector2(760, -100)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_ul0w4")
nodes/fragment/7/position = Vector2(60, -20)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorDecompose_ygit6")
nodes/fragment/9/position = Vector2(-200, -40)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_dsy1e")
nodes/fragment/10/position = Vector2(-580, -20)
nodes/fragment/11/node = SubResource("VisualShaderNodeParameterRef_ebypa")
nodes/fragment/11/position = Vector2(-580, 800)
nodes/fragment/13/node = SubResource("VisualShaderNodeCustom_ewyu2")
nodes/fragment/13/position = Vector2(-40, 160)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_3pscm")
nodes/fragment/15/position = Vector2(-900, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_se0vo")
nodes/fragment/16/position = Vector2(120, 120)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_deqbq")
nodes/fragment/17/position = Vector2(220, -40)
nodes/fragment/18/node = SubResource("VisualShaderNodeClamp_3bnc3")
nodes/fragment/18/position = Vector2(580, 100)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatParameter_486ak")
nodes/fragment/19/position = Vector2(-320, 200)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatParameter_pdt4e")
nodes/fragment/20/position = Vector2(-500, 400)
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatOp_gxisd")
nodes/fragment/22/position = Vector2(400, 160)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatOp_4nky3")
nodes/fragment/23/position = Vector2(280, 280)
nodes/fragment/25/node = SubResource("VisualShaderNodeDistanceFade_jc4ql")
nodes/fragment/25/position = Vector2(120, 660)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatParameter_q2t0d")
nodes/fragment/26/position = Vector2(-140, 660)
nodes/fragment/27/node = SubResource("VisualShaderNodeCustom_88dg1")
nodes/fragment/27/position = Vector2(0, 340)
nodes/fragment/28/node = SubResource("VisualShaderNodeRemap_o5aol")
nodes/fragment/28/position = Vector2(280, 440)
nodes/fragment/29/node = SubResource("VisualShaderNodeVectorCompose_8llsy")
nodes/fragment/29/position = Vector2(-221.995, 457.877)
nodes/fragment/30/node = SubResource("VisualShaderNodeTexture2DParameter_v4cbf")
nodes/fragment/30/position = Vector2(360, -340)
nodes/fragment/31/node = SubResource("VisualShaderNodeRemap_3ifu7")
nodes/fragment/31/position = Vector2(800, 220)
nodes/fragment/32/node = SubResource("VisualShaderNodeRemap_63gdx")
nodes/fragment/32/position = Vector2(780, 420)
nodes/fragment/connections = PackedInt32Array(9, 1, 7, 0, 10, 0, 9, 0, 11, 0, 7, 1, 18, 0, 4, 0, 19, 0, 13, 2, 7, 0, 17, 0, 13, 0, 16, 0, 16, 0, 17, 1, 23, 0, 22, 1, 22, 0, 18, 0, 17, 0, 22, 0, 26, 0, 25, 0, 27, 0, 23, 0, 25, 0, 28, 0, 28, 0, 23, 1, 20, 0, 29, 0, 20, 0, 29, 1, 29, 0, 27, 2, 30, 0, 4, 2, 18, 0, 31, 0, 32, 0, 0, 4, 18, 0, 32, 0, 31, 0, 0, 3, 4, 0, 0, 0)
