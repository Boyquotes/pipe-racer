[gd_resource type="VisualShader" load_steps=27 format=3 uid="uid://cf6vnamijilnu"]

[ext_resource type="Script" path="res://addons/shaderV/tools/sinTime.gd" id="1_nn7pr"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/worley3d.gd" id="1_oibvn"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/perlin3d.gd" id="2_58db3"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_a2ijy"]
output_port_for_preview = 0
default_input_values = [1, Vector3(0, 0, 0), 2, 30.0, 3, 1.0, 4, 50.0]
initialized = true
script = ExtResource("1_oibvn")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bvkc8"]
input_name = "time"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_kdgcj"]
output_port_for_preview = 0
default_input_values = [1, Vector3(0, 0, 0), 2, 15.0, 3, 1.0, 4, 50.0]
initialized = true
script = ExtResource("1_oibvn")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2q4nx"]
input_name = "time"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_2jysw"]
operator = 7

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ba1dl"]
input_name = "uv"

[sub_resource type="Curve" id="Curve_6227q"]
_data = [Vector2(0.507653, 0), 0.0, 0.0, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_6ubkv"]
curve = SubResource("Curve_6227q")

[sub_resource type="VisualShaderNodeCurveTexture" id="VisualShaderNodeCurveTexture_vvo1o"]
texture = SubResource("CurveTexture_6ubkv")

[sub_resource type="VisualShaderNodeCurveTexture" id="VisualShaderNodeCurveTexture_358tc"]
texture = SubResource("CurveTexture_6ubkv")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_srprr"]
parameter_name = "BaseColor"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ok7si"]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_cd61x"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.5, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_d2en8"]
function = 31

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_4rmlb"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ihusd"]
output_port_for_preview = 0
default_input_values = [1, Vector3(0, 0, 0), 2, 35.0, 3, 0.0]
initialized = true
script = ExtResource("2_58db3")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ql424"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_txj78"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_ra5h8"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_w7my4"]
default_input_values = [0, 0.1, 1, 0.5]
initialized = true
script = ExtResource("1_nn7pr")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xdql4"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_etk5d"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_o0dpk"]
default_input_values = [0, -0.1, 1, 0.5]
initialized = true
script = ExtResource("1_nn7pr")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 BaseColor : source_color;
uniform sampler2D curve_frg_20 : repeat_disable;
uniform sampler2D curve_frg_21 : repeat_disable;


// WorleyNoise3D
vec2 _cellular3dNoiseFunc(vec3 P, float _jitter_w3d) {
	float K = 0.142857142857;
	float Ko = 0.428571428571;
	float K2 = 0.020408163265306;
	float Kz = 0.166666666667;
	float Kzo = 0.416666666667;
	
	vec3 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec3 Pf = fract(P) - 0.5;
	
	vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);
	vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);
	vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);
	
	vec3 p = ((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)*(Pi.x+vec3(-1.0,0.0,1.0)))-floor(((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)
				*(Pi.x+vec3(-1.0,0.0,1.0)))*(1.0/289.0))*289.0;
	vec3 p1 = ((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))-floor(((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))*(1.0/289.0))*289.0;
	vec3 p2 = ((34.0*(p+Pi.y)+1.0)*(p+Pi.y))-floor(((34.0*(p+Pi.y)+1.0)*(p+Pi.y))*(1.0/289.0))*289.0;
	vec3 p3 = ((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))-floor(((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))*(1.0/289.0))*289.0;
	
	vec3 p11 = ((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))-floor(((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p12 = ((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))-floor(((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))*(1.0/289.0))*289.0;
	vec3 p13 = ((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))-floor(((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p21 = ((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))-floor(((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p22 = ((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))-floor(((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))*(1.0/289.0))*289.0;
	vec3 p23 = ((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))-floor(((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p31 = ((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))-floor(((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p32 = ((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))-floor(((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))*(1.0/289.0))*289.0;
	vec3 p33 = ((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))-floor(((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 ox11 = fract(p11*K) - Ko;
	vec3 oy11 = ((floor(p11*K))-floor((floor(p11*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz11 = floor(p11*K2)*Kz - Kzo;
	
	vec3 ox12 = fract(p12*K) - Ko;
	vec3 oy12 = ((floor(p12*K))-floor((floor(p12*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz12 = floor(p12*K2)*Kz - Kzo;
	
	vec3 ox13 = fract(p13*K) - Ko;
	vec3 oy13 = ((floor(p13*K))-floor((floor(p13*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz13 = floor(p13*K2)*Kz - Kzo;
	
	vec3 ox21 = fract(p21*K) - Ko;
	vec3 oy21 = ((floor(p21*K))-floor((floor(p21*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz21 = floor(p21*K2)*Kz - Kzo;
	
	vec3 ox22 = fract(p22*K) - Ko;
	vec3 oy22 = ((floor(p22*K))-floor((floor(p22*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz22 = floor(p22*K2)*Kz - Kzo;
	
	vec3 ox23 = fract(p23*K) - Ko;
	vec3 oy23 = ((floor(p23*K))-floor((floor(p23*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz23 = floor(p23*K2)*Kz - Kzo;
	
	vec3 ox31 = fract(p31*K) - Ko;
	vec3 oy31 = ((floor(p31*K))-floor((floor(p31*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz31 = floor(p31*K2)*Kz - Kzo;
	
	vec3 ox32 = fract(p32*K) - Ko;
	vec3 oy32 = ((floor(p32*K))-floor((floor(p32*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz32 = floor(p32*K2)*Kz - Kzo;
	
	vec3 ox33 = fract(p33*K) - Ko;
	vec3 oy33 = ((floor(p33*K))-floor((floor(p33*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz33 = floor(p33*K2)*Kz - Kzo;
	
	vec3 dx11 = Pfx + _jitter_w3d*ox11;
	vec3 dy11 = Pfy.x + _jitter_w3d*oy11;
	vec3 dz11 = Pfz.x + _jitter_w3d*oz11;
	
	vec3 dx12 = Pfx + _jitter_w3d*ox12;
	vec3 dy12 = Pfy.x + _jitter_w3d*oy12;
	vec3 dz12 = Pfz.y + _jitter_w3d*oz12;
	
	vec3 dx13 = Pfx + _jitter_w3d*ox13;
	vec3 dy13 = Pfy.x + _jitter_w3d*oy13;
	vec3 dz13 = Pfz.z + _jitter_w3d*oz13;
	
	vec3 dx21 = Pfx + _jitter_w3d*ox21;
	vec3 dy21 = Pfy.y + _jitter_w3d*oy21;
	vec3 dz21 = Pfz.x + _jitter_w3d*oz21;
	
	vec3 dx22 = Pfx + _jitter_w3d*ox22;
	vec3 dy22 = Pfy.y + _jitter_w3d*oy22;
	vec3 dz22 = Pfz.y + _jitter_w3d*oz22;
	
	vec3 dx23 = Pfx + _jitter_w3d*ox23;
	vec3 dy23 = Pfy.y + _jitter_w3d*oy23;
	vec3 dz23 = Pfz.z + _jitter_w3d*oz23;
	
	vec3 dx31 = Pfx + _jitter_w3d*ox31;
	vec3 dy31 = Pfy.z + _jitter_w3d*oy31;
	vec3 dz31 = Pfz.x + _jitter_w3d*oz31;
	
	vec3 dx32 = Pfx + _jitter_w3d*ox32;
	vec3 dy32 = Pfy.z + _jitter_w3d*oy32;
	vec3 dz32 = Pfz.y + _jitter_w3d*oz32;
	
	vec3 dx33 = Pfx + _jitter_w3d*ox33;
	vec3 dy33 = Pfy.z + _jitter_w3d*oy33;
	vec3 dz33 = Pfz.z + _jitter_w3d*oz33;
	
	vec3 d11 = dx11 * dx11 + dy11 * dy11 + dz11 * dz11;
	vec3 d12 = dx12 * dx12 + dy12 * dy12 + dz12 * dz12;
	vec3 d13 = dx13 * dx13 + dy13 * dy13 + dz13 * dz13;
	vec3 d21 = dx21 * dx21 + dy21 * dy21 + dz21 * dz21;
	vec3 d22 = dx22 * dx22 + dy22 * dy22 + dz22 * dz22;
	vec3 d23 = dx23 * dx23 + dy23 * dy23 + dz23 * dz23;
	vec3 d31 = dx31 * dx31 + dy31 * dy31 + dz31 * dz31;
	vec3 d32 = dx32 * dx32 + dy32 * dy32 + dz32 * dz32;
	vec3 d33 = dx33 * dx33 + dy33 * dy33 + dz33 * dz33;

	vec3 d1a = min(d11, d12);
	d12 = max(d11, d12);
	d11 = min(d1a, d13);
	d13 = max(d1a, d13);
	d12 = min(d12, d13);
	vec3 d2a = min(d21, d22);
	d22 = max(d21, d22);
	d21 = min(d2a, d23);
	d23 = max(d2a, d23);
	d22 = min(d22, d23);
	vec3 d3a = min(d31, d32);
	d32 = max(d31, d32);
	d31 = min(d3a, d33);
	d33 = max(d3a, d33);
	d32 = min(d32, d33);
	vec3 da = min(d11, d21);
	d21 = max(d11, d21);
	d11 = min(da, d31);
	d31 = max(da, d31);
	d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;
	d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx;
	d12 = min(d12, d21);
	d12 = min(d12, d22);
	d12 = min(d12, d31);
	d12 = min(d12, d32);
	d11.yz = min(d11.yz,d12.xy);
	d11.y = min(d11.y,d12.z);
	d11.y = min(d11.y,d11.z);
	return sqrt(d11.xy);
}
// PerlinNoise3D
float _perlin3dNoiseFunc(vec3 P) {
	vec3 Pi0 = floor(P);
	vec3 Pi1 = Pi0 + vec3(1.0);
	Pi0 = Pi0 - floor(Pi0 * (1.0 / 289.0)) * 289.0;
	Pi1 = Pi1 - floor(Pi1 * (1.0 / 289.0)) * 289.0;
	vec3 Pf0 = fract(P);
	vec3 Pf1 = Pf0 - vec3(1.0);
	vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
	vec4 iy = vec4(Pi0.yy, Pi1.yy);
	vec4 iz0 = vec4(Pi0.z);
	vec4 iz1 = vec4(Pi1.z);
	
	vec4 ixy = (((((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy))-
		floor(((((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor(((ix*34.0)+1.0)*ix*(1.0/289.0))*289.0 + iy)*(1.0/289.0))*289.0;
	vec4 ixy0 = ((((ixy + iz0)*34.0)+1.0)*(ixy + iz0))-floor((((ixy + iz0)*34.0)+1.0)*(ixy + iz0)*(1.0/289.0))*289.0;
	vec4 ixy1 = ((((ixy + iz1)*34.0)+1.0)*(ixy + iz1))-floor((((ixy + iz1)*34.0)+1.0)*(ixy + iz1)*(1.0/289.0))*289.0;
	
	vec4 gx0 = ixy0 * (1.0 / 7.0);
	vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
	gx0 = fract(gx0);
	vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
	vec4 sz0 = step(gz0, vec4(0.0));
	gx0 -= sz0 * (step(0.0, gx0) - 0.5);
	gy0 -= sz0 * (step(0.0, gy0) - 0.5);
	
	vec4 gx1 = ixy1 * (1.0 / 7.0);
	vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
	gx1 = fract(gx1);
	vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
	vec4 sz1 = step(gz1, vec4(0.0));
	gx1 -= sz1 * (step(0.0, gx1) - 0.5);
	gy1 -= sz1 * (step(0.0, gy1) - 0.5);
	
	vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
	vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
	vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
	vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
	vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
	vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
	vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
	vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);
	
	vec4 norm0 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110));
	g000 *= norm0.x;
	g010 *= norm0.y;
	g100 *= norm0.z;
	g110 *= norm0.w;
	vec4 norm1 = 1.79284291400159 - 0.85373472095314 * vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111));
	g001 *= norm1.x;
	g011 *= norm1.y;
	g101 *= norm1.z;
	g111 *= norm1.w;
	
	float n000 = dot(g000, Pf0);
	float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
	float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
	float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
	float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
	float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
	float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
	float n111 = dot(g111, Pf1);
	
	vec3 fade_xyz = Pf0 * Pf0 * Pf0 * (Pf0 * (Pf0 * 6.0 - 15.0) + 10.0);
	vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
	vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
	float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); 
	return 2.2 * n_xyz;
}

void fragment() {
// ColorParameter:22
	vec4 n_out22p0 = BaseColor;


// Input:2
	vec2 n_out2p0 = UV;


	float n_out4p0;
// SinTIME:4
	float n_in4p0 = 0.10000;
	float n_in4p1 = 0.50000;
	{
		n_out4p0 = n_in4p1 * sin(n_in4p0 * TIME);
	}


// VectorOp:3
	vec2 n_out3p0 = n_out2p0 + vec2(n_out4p0);


// Input:16
	float n_out16p0 = TIME;


	float n_out12p0;
	float n_out12p1;
// WorleyNoise3D:12
	vec3 n_in12p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in12p2 = 30.00000;
	float n_in12p3 = 1.00000;
	{
		vec2 n_out12p0n_out12p1 = _cellular3dNoiseFunc(vec3((vec3(n_out3p0, 0.0).xy+n_in12p1.xy)*n_in12p2, n_out16p0), min(max(n_in12p3, 0.0), 1.0));
		n_out12p0 = n_out12p0n_out12p1.x;
		n_out12p1 = n_out12p0n_out12p1.y;
	}


// CurveTexture:20
	float n_out20p0 = texture(curve_frg_20, vec2(n_out12p0)).r;


// Input:6
	vec2 n_out6p0 = UV;


	float n_out8p0;
// SinTIME:8
	float n_in8p0 = -0.10000;
	float n_in8p1 = 0.50000;
	{
		n_out8p0 = n_in8p1 * sin(n_in8p0 * TIME);
	}


// VectorOp:7
	vec2 n_out7p0 = n_out6p0 + vec2(n_out8p0);


// Input:18
	float n_out18p0 = TIME;


	float n_out17p0;
	float n_out17p1;
// WorleyNoise3D:17
	vec3 n_in17p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in17p2 = 15.00000;
	float n_in17p3 = 1.00000;
	{
		vec2 n_out17p0n_out17p1 = _cellular3dNoiseFunc(vec3((vec3(n_out7p0, 0.0).xy+n_in17p1.xy)*n_in17p2, n_out18p0), min(max(n_in17p3, 0.0), 1.0));
		n_out17p0 = n_out17p0n_out17p1.x;
		n_out17p1 = n_out17p0n_out17p1.y;
	}


// CurveTexture:21
	float n_out21p0 = texture(curve_frg_21, vec2(n_out17p0)).r;


	vec3 n_out19p0;
// ColorOp:19
	{
		float base = vec3(n_out20p0).x;
		float blend = vec3(n_out21p0).x;
		if (base < 0.5) {
			n_out19p0.x = (base * (blend + 0.5));
		} else {
			n_out19p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out20p0).y;
		float blend = vec3(n_out21p0).y;
		if (base < 0.5) {
			n_out19p0.y = (base * (blend + 0.5));
		} else {
			n_out19p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out20p0).z;
		float blend = vec3(n_out21p0).z;
		if (base < 0.5) {
			n_out19p0.z = (base * (blend + 0.5));
		} else {
			n_out19p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// ColorOp:23
	vec3 n_out23p0 = vec3(1.0) - (vec3(1.0) - vec3(n_out22p0.xyz)) * (vec3(1.0) - n_out19p0);


	float n_out24p0;
// Remap:24
	float n_in24p1 = 0.00000;
	float n_in24p2 = 1.00000;
	float n_in24p3 = 0.50000;
	float n_in24p4 = 1.00000;
	{
		float __input_range = n_in24p2 - n_in24p1;
		float __output_range = n_in24p4 - n_in24p3;
		n_out24p0 = n_in24p3 + __output_range * ((n_out19p0.x - n_in24p1) / __input_range);
	}


// Input:29
	float n_out29p0 = TIME;


	float n_out28p0;
// PerlinNoise3D:28
	vec3 n_in28p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in28p2 = 35.00000;
	{
		n_out28p0 = _perlin3dNoiseFunc(vec3((UV.xy+n_in28p1.xy) * n_in28p2, n_out29p0));
	}


// Clamp:30
	float n_in30p1 = 0.00000;
	float n_in30p2 = 1.00000;
	float n_out30p0 = clamp(n_out28p0, n_in30p1, n_in30p2);


// Output:0
	ALBEDO = n_out23p0;
	ALPHA = n_out24p0;
	ROUGHNESS = n_out30p0;
	SSS_STRENGTH = n_out30p0;


}
"
graph_offset = Vector2(-86.6145, -8.76538)
nodes/fragment/0/position = Vector2(1440, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ba1dl")
nodes/fragment/2/position = Vector2(-780, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_txj78")
nodes/fragment/3/position = Vector2(-320, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeCustom_w7my4")
nodes/fragment/4/position = Vector2(-640, 260)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_xdql4")
nodes/fragment/6/position = Vector2(-780, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_etk5d")
nodes/fragment/7/position = Vector2(-320, 460)
nodes/fragment/8/node = SubResource("VisualShaderNodeCustom_o0dpk")
nodes/fragment/8/position = Vector2(-640, 580)
nodes/fragment/12/node = SubResource("VisualShaderNodeCustom_a2ijy")
nodes/fragment/12/position = Vector2(220, 240)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_bvkc8")
nodes/fragment/16/position = Vector2(-100, 320)
nodes/fragment/17/node = SubResource("VisualShaderNodeCustom_kdgcj")
nodes/fragment/17/position = Vector2(340, 620)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_2q4nx")
nodes/fragment/18/position = Vector2(-60, 720)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorOp_2jysw")
nodes/fragment/19/position = Vector2(840, 360)
nodes/fragment/20/node = SubResource("VisualShaderNodeCurveTexture_vvo1o")
nodes/fragment/20/position = Vector2(440, 200)
nodes/fragment/21/node = SubResource("VisualShaderNodeCurveTexture_358tc")
nodes/fragment/21/position = Vector2(600, 540)
nodes/fragment/22/node = SubResource("VisualShaderNodeColorParameter_srprr")
nodes/fragment/22/position = Vector2(420, 0)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorOp_ok7si")
nodes/fragment/23/position = Vector2(1040, 220)
nodes/fragment/24/node = SubResource("VisualShaderNodeRemap_cd61x")
nodes/fragment/24/position = Vector2(1060, 500)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatFunc_d2en8")
nodes/fragment/26/position = Vector2(1040, 360)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatConstant_4rmlb")
nodes/fragment/27/position = Vector2(1200, 300)
nodes/fragment/28/node = SubResource("VisualShaderNodeCustom_ihusd")
nodes/fragment/28/position = Vector2(880, -100)
nodes/fragment/29/node = SubResource("VisualShaderNodeInput_ql424")
nodes/fragment/29/position = Vector2(520, -80)
nodes/fragment/30/node = SubResource("VisualShaderNodeClamp_ra5h8")
nodes/fragment/30/position = Vector2(1160, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 6, 0, 7, 0, 8, 0, 7, 1, 16, 0, 12, 4, 3, 0, 12, 0, 18, 0, 17, 4, 7, 0, 17, 0, 12, 0, 20, 0, 20, 0, 19, 0, 17, 0, 21, 0, 21, 0, 19, 1, 22, 0, 23, 0, 19, 0, 23, 1, 19, 0, 24, 0, 24, 0, 0, 1, 23, 0, 0, 0, 19, 0, 26, 0, 29, 0, 28, 3, 28, 0, 30, 0, 30, 0, 0, 3, 30, 0, 0, 17)
