[gd_resource type="VisualShader" load_steps=65 format=3 uid="uid://cf00oa4xifmry"]

[ext_resource type="Script" path="res://addons/shaderV/uv/transformUV.gd" id="1_ybjc6"]
[ext_resource type="Script" path="res://addons/shaderV/tools/TimeScaled.gd" id="2_72js4"]
[ext_resource type="Script" path="res://addons/shaderV/uv/rotate.gd" id="3_r3l55"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/worley3d.gd" id="3_yoabl"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/generic2d_fractal.gd" id="4_7aytp"]

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_n07p6"]
parameter_name = "Segments_Main_Rings"
hint = 2
min = 2
step = 2
default_value_enabled = true
default_value = 10

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u2tn0"]
parameter_name = "ring_speed1"
hint = 2
min = 0.1
max = 30.0
default_value_enabled = true
default_value = 6.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lwlwq"]
input_name = "uv"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ofbfw"]
default_input_values = [0, 0.0, 1, 0.07]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_k7f3o"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_sqvm3"]
parameter_name = "ring_color1"
default_value_enabled = true
default_value = Color(1, 0, 0, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_q5fge"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2mj3x"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8vbrn"]
parameter_name = "ring_color2"
default_value_enabled = true
default_value = Color(0, 1, 0, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ttc4p"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_xngof"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_hs34i"]
default_input_values = [0, 0.0, 1, 0.07]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_2gf6k"]
default_input_values = [1, Vector3(0.067, 0, 0), 2, Vector3(1, 1, 0), 3, Vector3(0.5, 0.5, 0), 4, 0.0, 5, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_ybjc6")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mqqgt"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_44kej"]
operator = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_m4vef"]
parameter_name = "ring_color3"
default_value_enabled = true
default_value = Color(0, 0, 1, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4pl8g"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_enru8"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_lwwie"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_kxx8d"]
default_input_values = [0, 6.0]
initialized = true
script = ExtResource("2_72js4")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_rkr0d"]
default_input_values = [1, Vector3(0.123, 0, 0), 2, Vector3(1, 1, 0), 3, Vector3(0.5, 0.5, 0), 4, 0.0, 5, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_ybjc6")

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_hqv7t"]
default_input_values = [0, 0.0, 1, 0.07]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8v5jn"]
operator = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mdkts"]
parameter_name = "ring_offset1"
hint = 2
max = 4.0
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_k7c4f"]
parameter_name = "ring_offset2"
hint = 2
max = 4.0
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_1cga2"]
parameter_name = "ring_offset3"
hint = 2
max = 4.0
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_iprwa"]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_mcpwn"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_s4las"]
function = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_s1w4c"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bcq3y"]
default_input_values = [0, 0.0, 1, 3.142]
operator = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_obr31"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bhjrj"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_y0tvk"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_rhlwr"]
parameter_name = "ring_speed2"
hint = 2
min = 0.1
max = 30.0
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_k6ses"]
default_input_values = [0, 6.0]
initialized = true
script = ExtResource("2_72js4")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_m8n0r"]
parameter_name = "ring_speed3"
hint = 2
min = 0.1
max = 30.0
default_value_enabled = true
default_value = 4.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_atcka"]
default_input_values = [0, 6.0]
initialized = true
script = ExtResource("2_72js4")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_b16lo"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_enn01"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ifxyx"]
output_port_for_preview = 0
default_input_values = [1, Vector3(0, 0, 0), 2, 50.0, 3, 1.0, 4, 0.0]
initialized = true
script = ExtResource("3_yoabl")

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_brfek"]
function = 0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_y4d61"]
default_input_values = [0, 1.0]
initialized = true
script = ExtResource("2_72js4")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ilov2"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_434hx"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_r3gqr"]
function = 31

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tsky6"]
parameter_name = "outside_ring_color"
default_value_enabled = true
default_value = Color(0.290196, 0.34902, 0.333333, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4n07n"]
output_port_for_preview = 0
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ybu7p"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ou7jx"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sr0sm"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xrtej"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_83t0u"]
output_port_for_preview = 0
default_input_values = [1, 6, 2, Vector3(0.5, 8, 0), 3, 4.0, 4, 0.8, 5, 0.0, 6, 0.3, 7, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("4_7aytp")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_f8vi3"]
output_port_for_preview = 0
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_18lg8"]
operator = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_ykold"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.1, 4, 0.4]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_vx1k4"]
default_input_values = [1, 1.571, 2, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("3_r3l55")

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_3tqm0"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nb5bx"]
default_input_values = [0, 3.142, 1, 6.0]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ring_color1 : source_color = vec4(1.000000, 0.000000, 0.000000, 1.000000);
uniform int Segments_Main_Rings : hint_range(2, 100, 2) = 10;
uniform float ring_speed1 : hint_range(0.10000000149012, 30, 0.10000000149012) = 6;
uniform float ring_offset1 : hint_range(0, 4, 0.10000000149012) = 1;
uniform vec4 ring_color2 : source_color = vec4(0.000000, 1.000000, 0.000000, 1.000000);
uniform float ring_speed2 : hint_range(0.10000000149012, 30, 0.10000000149012) = 5;
uniform float ring_offset2 : hint_range(0, 4, 0.10000000149012) = 2;
uniform vec4 ring_color3 : source_color = vec4(0.000000, 0.000000, 1.000000, 1.000000);
uniform float ring_speed3 : hint_range(0.10000000149012, 30, 0.10000000149012) = 4;
uniform float ring_offset3 : hint_range(0, 4, 0.10000000149012) = 0;
uniform vec4 outside_ring_color : source_color = vec4(0.290196, 0.349020, 0.333333, 1.000000);


// RotateUV
vec3 _rotateUV(vec3 _rotate_uv, vec2 _rotate_pivot_vect, float _rotate_radians){
	//_r0tation_r0tate = radians(_r0tationDeg_r0tate);
	vec2 _rotation_angle = vec2(cos(_rotate_radians), sin(_rotate_radians));
	_rotate_uv.xy -= _rotate_pivot_vect;
	_rotate_uv.xy = vec2((_rotate_uv.x*_rotation_angle.x-_rotate_uv.y*_rotation_angle.y), 
						 (_rotate_uv.x*_rotation_angle.y+_rotate_uv.y*_rotation_angle.x));
	_rotate_uv.xy += _rotate_pivot_vect;
	return _rotate_uv;
}
// TransformUV
vec2 _transformUV(vec2 _uv_transform, vec2 _scale_uv_, vec2 _pivot_scale_uv_, vec2 _offset_uv_, float _rotate_uv, vec2 _pivot_rotate_uv_){
	_uv_transform -= _offset_uv_; // offset
	_uv_transform = (_uv_transform - _pivot_scale_uv_) * _scale_uv_ + _pivot_scale_uv_; // zoom
	vec2 _rot_uv_angl = vec2(cos(_rotate_uv), sin(_rotate_uv));
	mat2 _rot_matrix = mat2(vec2(_rot_uv_angl.x, - _rot_uv_angl.y), vec2(_rot_uv_angl.y, _rot_uv_angl.x));
	_uv_transform = (_uv_transform - _pivot_rotate_uv_) * _rot_matrix + _pivot_rotate_uv_; // rotate
	return _uv_transform;
}
// WorleyNoise3D
vec2 _cellular3dNoiseFunc(vec3 P, float _jitter_w3d) {
	float K = 0.142857142857;
	float Ko = 0.428571428571;
	float K2 = 0.020408163265306;
	float Kz = 0.166666666667;
	float Kzo = 0.416666666667;
	
	vec3 Pi = floor(P) - floor(floor(P) * (1.0 / 289.0)) * 289.0;
	vec3 Pf = fract(P) - 0.5;
	
	vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);
	vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);
	vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);
	
	vec3 p = ((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)*(Pi.x+vec3(-1.0,0.0,1.0)))-floor(((34.0*(Pi.x+vec3(-1.0,0.0,1.0))+1.0)
				*(Pi.x+vec3(-1.0,0.0,1.0)))*(1.0/289.0))*289.0;
	vec3 p1 = ((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))-floor(((34.0*(p+Pi.y-1.0)+1.0)*(p+Pi.y-1.0))*(1.0/289.0))*289.0;
	vec3 p2 = ((34.0*(p+Pi.y)+1.0)*(p+Pi.y))-floor(((34.0*(p+Pi.y)+1.0)*(p+Pi.y))*(1.0/289.0))*289.0;
	vec3 p3 = ((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))-floor(((34.0*(p+Pi.y+1.0)+1.0)*(p+Pi.y+1.0))*(1.0/289.0))*289.0;
	
	vec3 p11 = ((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))-floor(((34.0*(p1+Pi.z-1.0)+1.0)*(p1+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p12 = ((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))-floor(((34.0*(p1+Pi.z)+1.0)*(p1+Pi.z))*(1.0/289.0))*289.0;
	vec3 p13 = ((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))-floor(((34.0*(p1+Pi.z+1.0)+1.0)*(p1+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p21 = ((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))-floor(((34.0*(p2+Pi.z-1.0)+1.0)*(p2+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p22 = ((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))-floor(((34.0*(p2+Pi.z)+1.0)*(p2+Pi.z))*(1.0/289.0))*289.0;
	vec3 p23 = ((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))-floor(((34.0*(p2+Pi.z+1.0)+1.0)*(p2+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 p31 = ((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))-floor(((34.0*(p3+Pi.z-1.0)+1.0)*(p3+Pi.z-1.0))*(1.0/289.0))*289.0;
	vec3 p32 = ((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))-floor(((34.0*(p3+Pi.z)+1.0)*(p3+Pi.z))*(1.0/289.0))*289.0;
	vec3 p33 = ((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))-floor(((34.0*(p3+Pi.z+1.0)+1.0)*(p3+Pi.z+1.0))*(1.0/289.0))*289.0;
	
	vec3 ox11 = fract(p11*K) - Ko;
	vec3 oy11 = ((floor(p11*K))-floor((floor(p11*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz11 = floor(p11*K2)*Kz - Kzo;
	
	vec3 ox12 = fract(p12*K) - Ko;
	vec3 oy12 = ((floor(p12*K))-floor((floor(p12*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz12 = floor(p12*K2)*Kz - Kzo;
	
	vec3 ox13 = fract(p13*K) - Ko;
	vec3 oy13 = ((floor(p13*K))-floor((floor(p13*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz13 = floor(p13*K2)*Kz - Kzo;
	
	vec3 ox21 = fract(p21*K) - Ko;
	vec3 oy21 = ((floor(p21*K))-floor((floor(p21*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz21 = floor(p21*K2)*Kz - Kzo;
	
	vec3 ox22 = fract(p22*K) - Ko;
	vec3 oy22 = ((floor(p22*K))-floor((floor(p22*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz22 = floor(p22*K2)*Kz - Kzo;
	
	vec3 ox23 = fract(p23*K) - Ko;
	vec3 oy23 = ((floor(p23*K))-floor((floor(p23*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz23 = floor(p23*K2)*Kz - Kzo;
	
	vec3 ox31 = fract(p31*K) - Ko;
	vec3 oy31 = ((floor(p31*K))-floor((floor(p31*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz31 = floor(p31*K2)*Kz - Kzo;
	
	vec3 ox32 = fract(p32*K) - Ko;
	vec3 oy32 = ((floor(p32*K))-floor((floor(p32*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz32 = floor(p32*K2)*Kz - Kzo;
	
	vec3 ox33 = fract(p33*K) - Ko;
	vec3 oy33 = ((floor(p33*K))-floor((floor(p33*K))*(1.0/7.0))*7.0)*K - Ko;
	vec3 oz33 = floor(p33*K2)*Kz - Kzo;
	
	vec3 dx11 = Pfx + _jitter_w3d*ox11;
	vec3 dy11 = Pfy.x + _jitter_w3d*oy11;
	vec3 dz11 = Pfz.x + _jitter_w3d*oz11;
	
	vec3 dx12 = Pfx + _jitter_w3d*ox12;
	vec3 dy12 = Pfy.x + _jitter_w3d*oy12;
	vec3 dz12 = Pfz.y + _jitter_w3d*oz12;
	
	vec3 dx13 = Pfx + _jitter_w3d*ox13;
	vec3 dy13 = Pfy.x + _jitter_w3d*oy13;
	vec3 dz13 = Pfz.z + _jitter_w3d*oz13;
	
	vec3 dx21 = Pfx + _jitter_w3d*ox21;
	vec3 dy21 = Pfy.y + _jitter_w3d*oy21;
	vec3 dz21 = Pfz.x + _jitter_w3d*oz21;
	
	vec3 dx22 = Pfx + _jitter_w3d*ox22;
	vec3 dy22 = Pfy.y + _jitter_w3d*oy22;
	vec3 dz22 = Pfz.y + _jitter_w3d*oz22;
	
	vec3 dx23 = Pfx + _jitter_w3d*ox23;
	vec3 dy23 = Pfy.y + _jitter_w3d*oy23;
	vec3 dz23 = Pfz.z + _jitter_w3d*oz23;
	
	vec3 dx31 = Pfx + _jitter_w3d*ox31;
	vec3 dy31 = Pfy.z + _jitter_w3d*oy31;
	vec3 dz31 = Pfz.x + _jitter_w3d*oz31;
	
	vec3 dx32 = Pfx + _jitter_w3d*ox32;
	vec3 dy32 = Pfy.z + _jitter_w3d*oy32;
	vec3 dz32 = Pfz.y + _jitter_w3d*oz32;
	
	vec3 dx33 = Pfx + _jitter_w3d*ox33;
	vec3 dy33 = Pfy.z + _jitter_w3d*oy33;
	vec3 dz33 = Pfz.z + _jitter_w3d*oz33;
	
	vec3 d11 = dx11 * dx11 + dy11 * dy11 + dz11 * dz11;
	vec3 d12 = dx12 * dx12 + dy12 * dy12 + dz12 * dz12;
	vec3 d13 = dx13 * dx13 + dy13 * dy13 + dz13 * dz13;
	vec3 d21 = dx21 * dx21 + dy21 * dy21 + dz21 * dz21;
	vec3 d22 = dx22 * dx22 + dy22 * dy22 + dz22 * dz22;
	vec3 d23 = dx23 * dx23 + dy23 * dy23 + dz23 * dz23;
	vec3 d31 = dx31 * dx31 + dy31 * dy31 + dz31 * dz31;
	vec3 d32 = dx32 * dx32 + dy32 * dy32 + dz32 * dz32;
	vec3 d33 = dx33 * dx33 + dy33 * dy33 + dz33 * dz33;

	vec3 d1a = min(d11, d12);
	d12 = max(d11, d12);
	d11 = min(d1a, d13);
	d13 = max(d1a, d13);
	d12 = min(d12, d13);
	vec3 d2a = min(d21, d22);
	d22 = max(d21, d22);
	d21 = min(d2a, d23);
	d23 = max(d2a, d23);
	d22 = min(d22, d23);
	vec3 d3a = min(d31, d32);
	d32 = max(d31, d32);
	d31 = min(d3a, d33);
	d33 = max(d3a, d33);
	d32 = min(d32, d33);
	vec3 da = min(d11, d21);
	d21 = max(d11, d21);
	d11 = min(da, d31);
	d31 = max(da, d31);
	d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;
	d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx;
	d12 = min(d12, d21);
	d12 = min(d12, d22);
	d12 = min(d12, d31);
	d12 = min(d12, d32);
	d11.yz = min(d11.yz,d12.xy);
	d11.y = min(d11.y,d12.z);
	d11.y = min(d11.y,d11.z);
	return sqrt(d11.xy);
}
// FractalGenericNoise2D
float _hash2_gener1c2DFractal(vec2 _p_hash2_gener1c) {
	return (fract(1e4 * sin(17.0 * _p_hash2_gener1c.x + _p_hash2_gener1c.y * 0.1) *
					(0.1 + abs(sin(_p_hash2_gener1c.y * 13.0 + _p_hash2_gener1c.x)))));
}
float _genericNoise2DFractal(vec2 _x_gener1c2D) {
	vec2 _temp_i_gener1c2D = floor(_x_gener1c2D);
	vec2 _temp_f_gener1c2D = fract(_x_gener1c2D);

	float _a_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D);
	float _b_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 0.0));
	float _c_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(0.0, 1.0));
	float _d_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 1.0));
	
	vec2 _u_g1n2 = _temp_f_gener1c2D * _temp_f_gener1c2D * (3.0 - 2.0 * _temp_f_gener1c2D);
	return (mix(_a_g1n2, _b_g1n2, _u_g1n2.x) + (_c_g1n2 - _a_g1n2) *
				_u_g1n2.y * (1.0 - _u_g1n2.x) + (_d_g1n2 - _b_g1n2) * _u_g1n2.x * _u_g1n2.y);
}
float _genericNoise2DFBM(vec2 _uv_gnfbm, int _oct_gnfbm, vec2 _per_gnfbm, float _lac_gnfbm,
						float _persist_gnfbm, float _rot_gnfbm, float _ampl_gnfbm, vec2 _shift_gnfbm) {
	float _v = 0.0;
	float _a = _ampl_gnfbm;
	mat2 _r0t = mat2(vec2(cos(_rot_gnfbm), sin(_rot_gnfbm)), vec2(-sin(_rot_gnfbm), cos(_rot_gnfbm)));
	for (int i = 0; i < _oct_gnfbm; ++i) {
		_v += _a * _genericNoise2DFractal(_uv_gnfbm * _per_gnfbm);
		_uv_gnfbm = _r0t * _uv_gnfbm * _lac_gnfbm + _shift_gnfbm;
		_a *= _persist_gnfbm;
	}
	return _v;
}

void fragment() {
// ColorParameter:16
	vec4 n_out16p0 = ring_color1;


// Input:2
	vec2 n_out2p0 = UV;


	vec3 n_out7p0;
// RotateUV:7
	float n_in7p1 = 1.57100;
	vec3 n_in7p2 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out7p0 = _rotateUV(vec3(n_out2p0, 0.0), n_in7p2.xy, n_in7p1);
	}


// IntParameter:10
	int n_out10p0 = Segments_Main_Rings;


// FloatOp:9
	float n_in9p0 = 3.14200;
	float n_out9p0 = n_in9p0 * float(n_out10p0);


// FloatOp:4
	float n_out4p0 = n_out7p0.x * n_out9p0;


// FloatParameter:11
	float n_out11p0 = ring_speed1;


	float n_out3p0;
// ScaledTIME:3
	{
		n_out3p0 = n_out11p0 * TIME;
	}


// FloatOp:6
	float n_out6p0 = n_out4p0 + n_out3p0;


// FloatParameter:33
	float n_out33p0 = ring_offset1;


// FloatOp:36
	float n_out36p0 = n_out6p0 + n_out33p0;


// FloatFunc:5
	float n_out5p0 = sin(n_out36p0);


	float n_out8p0;
// Remap:8
	float n_in8p1 = -1.00000;
	float n_in8p2 = 1.00000;
	float n_in8p3 = 0.00000;
	float n_in8p4 = 1.00000;
	{
		float __input_range = n_in8p2 - n_in8p1;
		float __output_range = n_in8p4 - n_in8p3;
		n_out8p0 = n_in8p3 + __output_range * ((n_out5p0 - n_in8p1) / __input_range);
	}


// Input:13
	vec2 n_out13p0 = UV;


// Step:14
	float n_in14p1 = 0.07000;
	float n_out14p0 = step(n_out13p0.x, n_in14p1);


// FloatOp:15
	float n_out15p0 = n_out8p0 * n_out14p0;


// VectorOp:17
	vec4 n_out17p0 = n_out16p0 * vec4(n_out15p0);


// ColorParameter:19
	vec4 n_out19p0 = ring_color2;


// FloatParameter:43
	float n_out43p0 = ring_speed2;


	float n_out44p0;
// ScaledTIME:44
	{
		n_out44p0 = n_out43p0 * TIME;
	}


// FloatOp:47
	float n_out47p0 = n_out4p0 + n_out44p0;


// FloatParameter:34
	float n_out34p0 = ring_offset2;


// FloatOp:41
	float n_out41p0 = n_out47p0 + n_out34p0;


// FloatFunc:38
	float n_out38p0 = sin(n_out41p0);


	float n_out37p0;
// Remap:37
	float n_in37p1 = -1.00000;
	float n_in37p2 = 1.00000;
	float n_in37p3 = 0.00000;
	float n_in37p4 = 1.00000;
	{
		float __input_range = n_in37p2 - n_in37p1;
		float __output_range = n_in37p4 - n_in37p3;
		n_out37p0 = n_in37p3 + __output_range * ((n_out38p0 - n_in37p1) / __input_range);
	}


	vec3 n_out23p0;
// TransformUV:23
	vec3 n_in23p1 = vec3(0.06700, 0.00000, 0.00000);
	vec3 n_in23p2 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_in23p3 = vec3(0.50000, 0.50000, 0.00000);
	float n_in23p4 = 0.00000;
	vec3 n_in23p5 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out23p0.xy = _transformUV(UV.xy, n_in23p2.xy, n_in23p3.xy, n_in23p1.xy, n_in23p4, n_in23p5.xy);
	}


// Step:21
	float n_in21p1 = 0.07000;
	float n_out21p0 = step(n_out23p0.x, n_in21p1);


// FloatOp:25
	float n_out25p0 = n_out21p0 - n_out14p0;


// FloatOp:20
	float n_out20p0 = n_out37p0 * n_out25p0;


// VectorOp:24
	vec4 n_out24p0 = n_out19p0 * vec4(n_out20p0);


// VectorOp:18
	vec4 n_out18p0 = n_out17p0 + n_out24p0;


// ColorParameter:26
	vec4 n_out26p0 = ring_color3;


// FloatParameter:45
	float n_out45p0 = ring_speed3;


	float n_out46p0;
// ScaledTIME:46
	{
		n_out46p0 = n_out45p0 * TIME;
	}


// FloatOp:48
	float n_out48p0 = n_out4p0 + n_out46p0;


// FloatParameter:35
	float n_out35p0 = ring_offset3;


// FloatOp:42
	float n_out42p0 = n_out48p0 + n_out35p0;


// FloatFunc:39
	float n_out39p0 = sin(n_out42p0);


	float n_out40p0;
// Remap:40
	float n_in40p1 = -1.00000;
	float n_in40p2 = 1.00000;
	float n_in40p3 = 0.00000;
	float n_in40p4 = 1.00000;
	{
		float __input_range = n_in40p2 - n_in40p1;
		float __output_range = n_in40p4 - n_in40p3;
		n_out40p0 = n_in40p3 + __output_range * ((n_out39p0 - n_in40p1) / __input_range);
	}


	vec3 n_out30p0;
// TransformUV:30
	vec3 n_in30p1 = vec3(0.12300, 0.00000, 0.00000);
	vec3 n_in30p2 = vec3(1.00000, 1.00000, 0.00000);
	vec3 n_in30p3 = vec3(0.50000, 0.50000, 0.00000);
	float n_in30p4 = 0.00000;
	vec3 n_in30p5 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out30p0.xy = _transformUV(UV.xy, n_in30p2.xy, n_in30p3.xy, n_in30p1.xy, n_in30p4, n_in30p5.xy);
	}


// Step:31
	float n_in31p1 = 0.07000;
	float n_out31p0 = step(n_out30p0.x, n_in31p1);


// FloatOp:32
	float n_out32p0 = n_out31p0 - n_out21p0;


// FloatOp:29
	float n_out29p0 = n_out40p0 * n_out32p0;


// VectorOp:27
	vec4 n_out27p0 = n_out26p0 * vec4(n_out29p0);


// VectorOp:28
	vec4 n_out28p0 = n_out18p0 + n_out27p0;


	float n_out50p0;
// ScaledTIME:50
	float n_in50p0 = 1.00000;
	{
		n_out50p0 = n_in50p0 * TIME;
	}


	float n_out49p0;
	float n_out49p1;
// WorleyNoise3D:49
	vec3 n_in49p1 = vec3(0.00000, 0.00000, 0.00000);
	float n_in49p2 = 50.00000;
	float n_in49p3 = 1.00000;
	{
		vec2 n_out49p0n_out49p1 = _cellular3dNoiseFunc(vec3((UV.xy+n_in49p1.xy)*n_in49p2, n_out50p0), min(max(n_in49p3, 0.0), 1.0));
		n_out49p0 = n_out49p0n_out49p1.x;
		n_out49p1 = n_out49p0n_out49p1.y;
	}


// VectorOp:51
	vec4 n_out51p0 = n_out28p0 * vec4(n_out49p0);


// VectorOp:52
	vec4 n_out52p0 = n_out51p0 * vec4(n_out31p0);


	float n_out62p0;
// FractalGenericNoise2D:62
	int n_in62p1 = 6;
	vec3 n_in62p2 = vec3(0.50000, 8.00000, 0.00000);
	float n_in62p3 = 4.00000;
	float n_in62p4 = 0.80000;
	float n_in62p5 = 0.00000;
	float n_in62p6 = 0.30000;
	vec3 n_in62p7 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out62p0 = _genericNoise2DFBM(n_out7p0.xy, int(n_in62p1), n_in62p2.xy, n_in62p3, n_in62p4, n_in62p5, n_in62p6, n_in62p7.xy);
	}


// ColorParameter:54
	vec4 n_out54p0 = outside_ring_color;


// FloatFunc:53
	float n_out53p0 = 1.0 - n_out31p0;


// VectorOp:55
	vec4 n_out55p0 = n_out54p0 * vec4(n_out53p0);


// VectorOp:63
	vec4 n_out63p0 = vec4(n_out62p0) * n_out55p0;


// VectorOp:56
	vec4 n_out56p0 = n_out52p0 + n_out63p0;


// FloatOp:59
	float n_in59p1 = 0.00000;
	float n_out59p0 = n_out53p0 + n_in59p1;


// FloatOp:64
	float n_out64p0 = n_out62p0 * n_out59p0;


	float n_out65p0;
// Remap:65
	float n_in65p1 = 0.00000;
	float n_in65p2 = 1.00000;
	float n_in65p3 = 0.10000;
	float n_in65p4 = 0.40000;
	{
		float __input_range = n_in65p2 - n_in65p1;
		float __output_range = n_in65p4 - n_in65p3;
		n_out65p0 = n_in65p3 + __output_range * ((n_out64p0 - n_in65p1) / __input_range);
	}


// Output:0
	ALBEDO = vec3(n_out56p0.xyz);
	METALLIC = n_out59p0;
	ROUGHNESS = n_out65p0;
	EMISSION = vec3(n_out52p0.xyz);


}
"
graph_offset = Vector2(-855.382, 188.202)
nodes/fragment/0/position = Vector2(3000, 440)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ttc4p")
nodes/fragment/2/position = Vector2(-1380, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_kxx8d")
nodes/fragment/3/position = Vector2(-1720, 520)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_bcq3y")
nodes/fragment/4/position = Vector2(-800, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_brfek")
nodes/fragment/5/position = Vector2(-120, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_sr0sm")
nodes/fragment/6/position = Vector2(-580, 340)
nodes/fragment/7/node = SubResource("VisualShaderNodeCustom_vx1k4")
nodes/fragment/7/position = Vector2(-1020, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeRemap_3tqm0")
nodes/fragment/8/position = Vector2(120, 380)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_nb5bx")
nodes/fragment/9/position = Vector2(-1000, 320)
nodes/fragment/10/node = SubResource("VisualShaderNodeIntParameter_n07p6")
nodes/fragment/10/position = Vector2(-1460, 360)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_u2tn0")
nodes/fragment/11/position = Vector2(-2040, 320)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_lwlwq")
nodes/fragment/13/position = Vector2(-1360, 1020)
nodes/fragment/14/node = SubResource("VisualShaderNodeStep_ofbfw")
nodes/fragment/14/position = Vector2(-1000, 1060)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_k7f3o")
nodes/fragment/15/position = Vector2(320, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeColorParameter_sqvm3")
nodes/fragment/16/position = Vector2(400, -40)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_q5fge")
nodes/fragment/17/position = Vector2(820, 140)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorOp_2mj3x")
nodes/fragment/18/position = Vector2(1160, 240)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorParameter_8vbrn")
nodes/fragment/19/position = Vector2(620, 380)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_xngof")
nodes/fragment/20/position = Vector2(320, 600)
nodes/fragment/21/node = SubResource("VisualShaderNodeStep_hs34i")
nodes/fragment/21/position = Vector2(-1140, 1260)
nodes/fragment/23/node = SubResource("VisualShaderNodeCustom_2gf6k")
nodes/fragment/23/position = Vector2(-1400, 1120)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_mqqgt")
nodes/fragment/24/position = Vector2(940, 480)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatOp_44kej")
nodes/fragment/25/position = Vector2(-840, 1260)
nodes/fragment/26/node = SubResource("VisualShaderNodeColorParameter_m4vef")
nodes/fragment/26/position = Vector2(640, 700)
nodes/fragment/27/node = SubResource("VisualShaderNodeVectorOp_4pl8g")
nodes/fragment/27/position = Vector2(1000, 740)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_enru8")
nodes/fragment/28/position = Vector2(1380, 360)
nodes/fragment/29/node = SubResource("VisualShaderNodeFloatOp_lwwie")
nodes/fragment/29/position = Vector2(340, 1040)
nodes/fragment/30/node = SubResource("VisualShaderNodeCustom_rkr0d")
nodes/fragment/30/position = Vector2(-1560, 1380)
nodes/fragment/31/node = SubResource("VisualShaderNodeStep_hqv7t")
nodes/fragment/31/position = Vector2(-1240, 1440)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatOp_8v5jn")
nodes/fragment/32/position = Vector2(-900, 1380)
nodes/fragment/33/node = SubResource("VisualShaderNodeFloatParameter_mdkts")
nodes/fragment/33/position = Vector2(-800, 480)
nodes/fragment/34/node = SubResource("VisualShaderNodeFloatParameter_k7c4f")
nodes/fragment/34/position = Vector2(-1100, 660)
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatParameter_1cga2")
nodes/fragment/35/position = Vector2(-820, 800)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatOp_iprwa")
nodes/fragment/36/position = Vector2(-320, 540)
nodes/fragment/37/node = SubResource("VisualShaderNodeRemap_mcpwn")
nodes/fragment/37/position = Vector2(40, 640)
nodes/fragment/38/node = SubResource("VisualShaderNodeFloatFunc_s4las")
nodes/fragment/38/position = Vector2(-180, 680)
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatFunc_s1w4c")
nodes/fragment/39/position = Vector2(-160, 940)
nodes/fragment/40/node = SubResource("VisualShaderNodeRemap_obr31")
nodes/fragment/40/position = Vector2(80, 920)
nodes/fragment/41/node = SubResource("VisualShaderNodeFloatOp_bhjrj")
nodes/fragment/41/position = Vector2(-340, 680)
nodes/fragment/42/node = SubResource("VisualShaderNodeFloatOp_y0tvk")
nodes/fragment/42/position = Vector2(-320, 920)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatParameter_rhlwr")
nodes/fragment/43/position = Vector2(-2040, 640)
nodes/fragment/44/node = SubResource("VisualShaderNodeCustom_k6ses")
nodes/fragment/44/position = Vector2(-1720, 660)
nodes/fragment/45/node = SubResource("VisualShaderNodeFloatParameter_m8n0r")
nodes/fragment/45/position = Vector2(-2040, 940)
nodes/fragment/46/node = SubResource("VisualShaderNodeCustom_atcka")
nodes/fragment/46/position = Vector2(-1720, 800)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatOp_b16lo")
nodes/fragment/47/position = Vector2(-1000, 500)
nodes/fragment/48/node = SubResource("VisualShaderNodeFloatOp_enn01")
nodes/fragment/48/position = Vector2(-1380, 780)
nodes/fragment/49/node = SubResource("VisualShaderNodeCustom_ifxyx")
nodes/fragment/49/position = Vector2(1620, 500)
nodes/fragment/50/node = SubResource("VisualShaderNodeCustom_y4d61")
nodes/fragment/50/position = Vector2(1380, 600)
nodes/fragment/51/node = SubResource("VisualShaderNodeVectorOp_ilov2")
nodes/fragment/51/position = Vector2(1860, 300)
nodes/fragment/52/node = SubResource("VisualShaderNodeVectorOp_434hx")
nodes/fragment/52/position = Vector2(2040, 240)
nodes/fragment/53/node = SubResource("VisualShaderNodeFloatFunc_r3gqr")
nodes/fragment/53/position = Vector2(-440, 1480)
nodes/fragment/54/node = SubResource("VisualShaderNodeColorParameter_tsky6")
nodes/fragment/54/position = Vector2(0, 1300)
nodes/fragment/55/node = SubResource("VisualShaderNodeVectorOp_4n07n")
nodes/fragment/55/position = Vector2(680, 1440)
nodes/fragment/56/node = SubResource("VisualShaderNodeVectorOp_ybu7p")
nodes/fragment/56/position = Vector2(2160, 540)
nodes/fragment/59/node = SubResource("VisualShaderNodeFloatOp_ou7jx")
nodes/fragment/59/position = Vector2(1940, 820)
nodes/fragment/60/node = SubResource("VisualShaderNodeVectorOp_xrtej")
nodes/fragment/60/position = Vector2(2420, 260)
nodes/fragment/62/node = SubResource("VisualShaderNodeCustom_83t0u")
nodes/fragment/62/position = Vector2(1020, 1180)
nodes/fragment/63/node = SubResource("VisualShaderNodeVectorOp_f8vi3")
nodes/fragment/63/position = Vector2(1340, 1220)
nodes/fragment/64/node = SubResource("VisualShaderNodeFloatOp_18lg8")
nodes/fragment/64/position = Vector2(2340, 660)
nodes/fragment/65/node = SubResource("VisualShaderNodeRemap_ykold")
nodes/fragment/65/position = Vector2(2680, 640)
nodes/fragment/connections = PackedInt32Array(4, 0, 6, 0, 3, 0, 6, 1, 7, 0, 4, 0, 2, 0, 7, 0, 5, 0, 8, 0, 9, 0, 4, 1, 10, 0, 9, 1, 11, 0, 3, 0, 8, 0, 15, 0, 14, 0, 15, 1, 16, 0, 17, 0, 15, 0, 17, 1, 13, 0, 14, 0, 23, 0, 21, 0, 19, 0, 24, 0, 20, 0, 24, 1, 24, 0, 18, 1, 17, 0, 18, 0, 25, 0, 20, 1, 21, 0, 25, 0, 14, 0, 25, 1, 26, 0, 27, 0, 18, 0, 28, 0, 27, 0, 28, 1, 29, 0, 27, 1, 30, 0, 31, 0, 31, 0, 32, 0, 21, 0, 32, 1, 32, 0, 29, 1, 6, 0, 36, 0, 33, 0, 36, 1, 36, 0, 5, 0, 38, 0, 37, 0, 37, 0, 20, 0, 39, 0, 40, 0, 40, 0, 29, 0, 41, 0, 38, 0, 34, 0, 41, 1, 42, 0, 39, 0, 35, 0, 42, 1, 43, 0, 44, 0, 45, 0, 46, 0, 4, 0, 47, 0, 44, 0, 47, 1, 47, 0, 41, 0, 4, 0, 48, 0, 46, 0, 48, 1, 48, 0, 42, 0, 50, 0, 49, 4, 28, 0, 51, 0, 31, 0, 52, 1, 49, 0, 51, 1, 51, 0, 52, 0, 31, 0, 53, 0, 54, 0, 55, 0, 53, 0, 55, 1, 52, 0, 56, 0, 56, 0, 0, 0, 53, 0, 59, 0, 59, 0, 60, 1, 51, 0, 60, 0, 52, 0, 0, 5, 62, 0, 63, 0, 63, 0, 56, 1, 55, 0, 63, 1, 7, 0, 62, 0, 62, 0, 64, 0, 59, 0, 64, 1, 59, 0, 0, 2, 64, 0, 65, 0, 65, 0, 0, 3)
