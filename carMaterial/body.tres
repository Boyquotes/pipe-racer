[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://cln2wbpucyp64"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/generic2d_fractal.gd" id="1_rwga8"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_7wewu"]
constant = Color(0.0475577, 0.0475576, 0.0475576, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ggdsi"]
constant = 1.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_bc78q"]
output_port_for_preview = 0
default_input_values = [1, 6, 2, Vector3(2, 10, 0), 3, 3.0, 4, 0.8, 5, 0.0, 6, 0.3, 7, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_rwga8")

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_yn2na"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.1, 4, 0.6]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ra2cy"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(10, 1)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cbe5y"]
output_port_for_preview = 0
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;



// FractalGenericNoise2D
float _hash2_gener1c2DFractal(vec2 _p_hash2_gener1c) {
	return (fract(1e4 * sin(17.0 * _p_hash2_gener1c.x + _p_hash2_gener1c.y * 0.1) *
					(0.1 + abs(sin(_p_hash2_gener1c.y * 13.0 + _p_hash2_gener1c.x)))));
}
float _genericNoise2DFractal(vec2 _x_gener1c2D) {
	vec2 _temp_i_gener1c2D = floor(_x_gener1c2D);
	vec2 _temp_f_gener1c2D = fract(_x_gener1c2D);

	float _a_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D);
	float _b_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 0.0));
	float _c_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(0.0, 1.0));
	float _d_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 1.0));
	
	vec2 _u_g1n2 = _temp_f_gener1c2D * _temp_f_gener1c2D * (3.0 - 2.0 * _temp_f_gener1c2D);
	return (mix(_a_g1n2, _b_g1n2, _u_g1n2.x) + (_c_g1n2 - _a_g1n2) *
				_u_g1n2.y * (1.0 - _u_g1n2.x) + (_d_g1n2 - _b_g1n2) * _u_g1n2.x * _u_g1n2.y);
}
float _genericNoise2DFBM(vec2 _uv_gnfbm, int _oct_gnfbm, vec2 _per_gnfbm, float _lac_gnfbm,
						float _persist_gnfbm, float _rot_gnfbm, float _ampl_gnfbm, vec2 _shift_gnfbm) {
	float _v = 0.0;
	float _a = _ampl_gnfbm;
	mat2 _r0t = mat2(vec2(cos(_rot_gnfbm), sin(_rot_gnfbm)), vec2(-sin(_rot_gnfbm), cos(_rot_gnfbm)));
	for (int i = 0; i < _oct_gnfbm; ++i) {
		_v += _a * _genericNoise2DFractal(_uv_gnfbm * _per_gnfbm);
		_uv_gnfbm = _r0t * _uv_gnfbm * _lac_gnfbm + _shift_gnfbm;
		_a *= _persist_gnfbm;
	}
	return _v;
}

void vertex() {
// Input:4
	vec2 n_out4p0 = UV;


// VectorOp:3
	vec2 n_in3p1 = vec2(10.00000, 1.00000);
	vec2 n_out3p0 = n_out4p0 * n_in3p1;


// Output:0
	UV = n_out3p0;


}

void fragment() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(0.047558, 0.047558, 0.047558, 1.000000);


// FloatConstant:3
	float n_out3p0 = 1.000000;


	float n_out4p0;
// FractalGenericNoise2D:4
	int n_in4p1 = 6;
	vec3 n_in4p2 = vec3(2.00000, 10.00000, 0.00000);
	float n_in4p3 = 3.00000;
	float n_in4p4 = 0.80000;
	float n_in4p5 = 0.00000;
	float n_in4p6 = 0.30000;
	vec3 n_in4p7 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out4p0 = _genericNoise2DFBM(UV.xy, int(n_in4p1), n_in4p2.xy, n_in4p3, n_in4p4, n_in4p5, n_in4p6, n_in4p7.xy);
	}


	float n_out5p0;
// Remap:5
	float n_in5p1 = 0.00000;
	float n_in5p2 = 1.00000;
	float n_in5p3 = 0.10000;
	float n_in5p4 = 0.60000;
	{
		float __input_range = n_in5p2 - n_in5p1;
		float __output_range = n_in5p4 - n_in5p3;
		n_out5p0 = n_in5p3 + __output_range * ((n_out4p0 - n_in5p1) / __input_range);
	}


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	METALLIC = n_out3p0;
	ROUGHNESS = n_out5p0;


}
"
graph_offset = Vector2(79.4712, -61.1713)
nodes/vertex/0/position = Vector2(840, 120)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_ra2cy")
nodes/vertex/3/position = Vector2(440, 420)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_cbe5y")
nodes/vertex/4/position = Vector2(20, 440)
nodes/vertex/connections = PackedInt32Array(4, 0, 3, 0, 3, 0, 0, 4)
nodes/fragment/0/position = Vector2(1000, 40)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_7wewu")
nodes/fragment/2/position = Vector2(520, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_ggdsi")
nodes/fragment/3/position = Vector2(580, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeCustom_bc78q")
nodes/fragment/4/position = Vector2(380, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeRemap_yn2na")
nodes/fragment/5/position = Vector2(700, 200)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 0, 2, 4, 0, 5, 0, 5, 0, 0, 3)
