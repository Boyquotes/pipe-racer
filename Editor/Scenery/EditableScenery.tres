[gd_resource type="VisualShader" load_steps=36 format=3 uid="uid://bia47weuc0by0"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/fractal/generic2d_fractal.gd" id="1_7vuwp"]
[ext_resource type="Gradient" uid="uid://caro1box0tjw4" path="res://Tracks/MountainGradient.tres" id="2_xo8ge"]
[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/perlin2d.gd" id="3_w76iu"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wnvm7"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_s3nyb"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_t6nnu"]
default_input_values = [0, 0.0, 1, 0.01, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_i2cui"]
parameter_name = "Noise_Layer_2_Scale"
default_value_enabled = true
default_value = 100.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_0rotw"]
parameter_name = "Noise_Layer_3_Scale"
default_value_enabled = true
default_value = 1000.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_k3j8c"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gqvg7"]
default_input_values = [0, 0.0, 1, 0.03]
operator = 2

[sub_resource type="VisualShaderNodeDistanceFade" id="VisualShaderNodeDistanceFade_na2h7"]
default_input_values = [0, 500.0, 1, 2.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_f8opu"]
parameter_name = "Noise_Layer_3_Distance"
default_value_enabled = true
default_value = 750.0

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_bdsm0"]
default_input_values = [1, 6, 2, Vector3(2, 2, 0), 3, 2.0, 4, 0.8, 5, 0.5, 6, 0.3, 7, Vector3(0.5, 0.5, 0)]
initialized = true
script = ExtResource("1_7vuwp")

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_vb75y"]
default_input_values = [1, 1.0, 2, 0.0, 3, 0.1, 4, 0.0]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_sn8l0"]
op_type = 0

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_62r0e"]
parameter_name = "ColorMap"
texture_filter = 2
texture_repeat = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_x1vo2"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.25, 4, 0.8]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_w6riw"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.05, 4, 0.6]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_cycpp"]
parameter_name = "SelectionVisible"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_m7iju"]
parameter_name = "SelectionRadius"
default_value_enabled = true
default_value = 0.02

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_vsbir"]
parameter_name = "SelectionPosition"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_qjjei"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_542jw"]
input_name = "uv"

[sub_resource type="GradientTexture1D" id="GradientTexture1D_1cwqd"]
gradient = ExtResource("2_xo8ge")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_o6kx7"]
output_port_for_preview = 0
source = 5
texture = SubResource("GradientTexture1D_1cwqd")

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_b0v08"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jl4i7"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_xqjf5"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7i2om"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_swr46"]
constant = Color(0.00839999, 0.50736, 0.84, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_v6n02"]
default_input_values = [0, 0.0, 1, 256.0]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_yqr76"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cvl0p"]
input_name = "color"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_4yr71"]
default_input_values = [1, Vector3(0, 0, 0), 2, 100.0, 3, Vector3(0, 0, 0)]
initialized = true
script = ExtResource("3_w76iu")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n2sr7"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float Noise_Layer_2_Scale = 100;
uniform float Noise_Layer_3_Scale = 1000;
uniform float Noise_Layer_3_Distance = 750;
uniform sampler2D ColorMap : filter_linear, repeat_disable;
uniform vec2 SelectionPosition = vec2(0.000000, 0.000000);
uniform float SelectionRadius = 0.01999999955297;
uniform bool SelectionVisible;


// PerlinNoise2D
float _perlin2dNoiseFunc(vec2 P, vec2 _period_perl2) {
	vec4 Pi = floor(vec4(P, P)) + vec4(0.0, 0.0, 1.0, 1.0);
	vec4 Pf = fract(vec4(P, P)) - vec4(0.0, 0.0, 1.0, 1.0);
	
	if (_period_perl2.x != 0.0 && _period_perl2.y != 0.0)
		Pi = mod(Pi, vec4(_period_perl2, _period_perl2));
	
	Pi = Pi - floor(Pi * (1.0 / 289.0)) * 289.0;
	vec4 ix = Pi.xzxz;
	vec4 iy = Pi.yyww;
	vec4 fx = Pf.xzxz;
	vec4 fy = Pf.yyww;
	
	vec4 i = (((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))-
		floor((((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))*(1.0/289.0))*289.0;
	
	vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
	vec4 gy = abs(gx) - 0.5 ;
	vec4 tx = floor(gx + 0.5);
	gx = gx - tx;
	
	vec2 g00 = vec2(gx.x,gy.x);
	vec2 g10 = vec2(gx.y,gy.y);
	vec2 g01 = vec2(gx.z,gy.z);
	vec2 g11 = vec2(gx.w,gy.w);
	
	vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));
	g00 *= norm.x;
	g01 *= norm.y;
	g10 *= norm.z;
	g11 *= norm.w;
	
	float n00 = dot(g00, vec2(fx.x, fy.x));
	float n10 = dot(g10, vec2(fx.y, fy.y));
	float n01 = dot(g01, vec2(fx.z, fy.z));
	float n11 = dot(g11, vec2(fx.w, fy.w));
	
	vec2 fade_xy = Pf.xy * Pf.xy * Pf.xy * (Pf.xy * (Pf.xy * 6.0 - 15.0) + 10.0);
	vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
	float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
	return 2.3 * n_xy;
}
// FractalGenericNoise2D
float _hash2_gener1c2DFractal(vec2 _p_hash2_gener1c) {
	return (fract(1e4 * sin(17.0 * _p_hash2_gener1c.x + _p_hash2_gener1c.y * 0.1) *
					(0.1 + abs(sin(_p_hash2_gener1c.y * 13.0 + _p_hash2_gener1c.x)))));
}
float _genericNoise2DFractal(vec2 _x_gener1c2D) {
	vec2 _temp_i_gener1c2D = floor(_x_gener1c2D);
	vec2 _temp_f_gener1c2D = fract(_x_gener1c2D);

	float _a_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D);
	float _b_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 0.0));
	float _c_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(0.0, 1.0));
	float _d_g1n2 = _hash2_gener1c2DFractal(_temp_i_gener1c2D + vec2(1.0, 1.0));
	
	vec2 _u_g1n2 = _temp_f_gener1c2D * _temp_f_gener1c2D * (3.0 - 2.0 * _temp_f_gener1c2D);
	return (mix(_a_g1n2, _b_g1n2, _u_g1n2.x) + (_c_g1n2 - _a_g1n2) *
				_u_g1n2.y * (1.0 - _u_g1n2.x) + (_d_g1n2 - _b_g1n2) * _u_g1n2.x * _u_g1n2.y);
}
float _genericNoise2DFBM(vec2 _uv_gnfbm, int _oct_gnfbm, vec2 _per_gnfbm, float _lac_gnfbm,
						float _persist_gnfbm, float _rot_gnfbm, float _ampl_gnfbm, vec2 _shift_gnfbm) {
	float _v = 0.0;
	float _a = _ampl_gnfbm;
	mat2 _r0t = mat2(vec2(cos(_rot_gnfbm), sin(_rot_gnfbm)), vec2(-sin(_rot_gnfbm), cos(_rot_gnfbm)));
	for (int i = 0; i < _oct_gnfbm; ++i) {
		_v += _a * _genericNoise2DFractal(_uv_gnfbm * _per_gnfbm);
		_uv_gnfbm = _r0t * _uv_gnfbm * _lac_gnfbm + _shift_gnfbm;
		_a *= _persist_gnfbm;
	}
	return _v;
}

void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;


// Output:0
	COLOR.rgb = n_out2p0;


}

void fragment() {
// Input:6
	vec4 n_out6p0 = COLOR;


// VectorDecompose:5
	float n_out5p0 = n_out6p0.x;
	float n_out5p1 = n_out6p0.y;
	float n_out5p2 = n_out6p0.z;
	float n_out5p3 = n_out6p0.w;


// FloatOp:4
	float n_in4p1 = 256.00000;
	float n_out4p0 = n_out5p1 / n_in4p1;


// FloatParameter:13
	float n_out13p0 = Noise_Layer_2_Scale;


	float n_out8p0;
// PerlinNoise2D:8
	vec3 n_in8p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in8p3 = vec3(0.00000, 0.00000, 0.00000);
	{
		n_out8p0 = _perlin2dNoiseFunc((UV.xy+n_in8p1.xy)*n_out13p0, n_in8p3.xy);
	}


// FloatOp:10
	float n_in10p1 = 0.10000;
	float n_out10p0 = n_out8p0 * n_in10p1;


// FloatOp:11
	float n_out11p0 = n_out4p0 + n_out10p0;


// FloatParameter:14
	float n_out14p0 = Noise_Layer_3_Scale;


// VectorCompose:21
	vec2 n_out21p0 = vec2(n_out14p0, n_out14p0);


	float n_out19p0;
// FractalGenericNoise2D:19
	int n_in19p1 = 6;
	float n_in19p3 = 2.00000;
	float n_in19p4 = 0.80000;
	float n_in19p5 = 0.50000;
	float n_in19p6 = 0.30000;
	vec3 n_in19p7 = vec3(0.50000, 0.50000, 0.00000);
	{
		n_out19p0 = _genericNoise2DFBM(UV.xy, int(n_in19p1), vec3(n_out21p0, 0.0).xy, n_in19p3, n_in19p4, n_in19p5, n_in19p6, n_in19p7.xy);
	}


// FloatParameter:18
	float n_out18p0 = Noise_Layer_3_Distance;


// DistanceFade:17
	float n_in17p1 = 2.00000;
	float n_out17p0 = clamp(smoothstep(n_out18p0, n_in17p1,-VERTEX.z),0.0,1.0);


	float n_out20p0;
// Remap:20
	float n_in20p1 = 1.00000;
	float n_in20p2 = 0.00000;
	float n_in20p3 = 0.10000;
	float n_in20p4 = 0.00000;
	{
		float __input_range = n_in20p2 - n_in20p1;
		float __output_range = n_in20p4 - n_in20p3;
		n_out20p0 = n_in20p3 + __output_range * ((n_out17p0 - n_in20p1) / __input_range);
	}


// FloatOp:16
	float n_out16p0 = n_out19p0 * n_out20p0;


// FloatOp:15
	float n_out15p0 = n_out11p0 + n_out16p0;


// Clamp:12
	float n_in12p1 = 0.01000;
	float n_in12p2 = 1.00000;
	float n_out12p0 = clamp(n_out15p0, n_in12p1, n_in12p2);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(ColorMap, vec2(n_out12p0));


// ColorConstant:34
	vec4 n_out34p0 = vec4(0.008400, 0.507360, 0.840000, 1.000000);


// Vector2Parameter:27
	vec2 n_out27p0 = SelectionPosition;


// Input:29
	vec2 n_out29p0 = UV;


// Distance:28
	float n_out28p0 = distance(n_out27p0, n_out29p0);


// FloatParameter:26
	float n_out26p0 = SelectionRadius;


// Step:30
	float n_out30p0 = step(n_out28p0, n_out26p0);


// BooleanParameter:25
	bool n_out25p0 = SelectionVisible;


// FloatOp:31
	float n_out31p0 = n_out30p0 * (n_out25p0 ? 1.0 : 0.0);


// FloatOp:32
	float n_in32p1 = 0.20000;
	float n_out32p0 = n_out31p0 * n_in32p1;


// Mix:33
	vec3 n_out33p0 = mix(vec3(n_out3p0.xyz), vec3(n_out34p0.xyz), vec3(n_out32p0));


	float n_out23p0;
// Remap:23
	float n_in23p1 = 0.00000;
	float n_in23p2 = 1.00000;
	float n_in23p3 = 0.25000;
	float n_in23p4 = 0.80000;
	{
		float __input_range = n_in23p2 - n_in23p1;
		float __output_range = n_in23p4 - n_in23p3;
		n_out23p0 = n_in23p3 + __output_range * ((n_out12p0 - n_in23p1) / __input_range);
	}


	float n_out24p0;
// Remap:24
	float n_in24p1 = 0.00000;
	float n_in24p2 = 1.00000;
	float n_in24p3 = 0.05000;
	float n_in24p4 = 0.60000;
	{
		float __input_range = n_in24p2 - n_in24p1;
		float __output_range = n_in24p4 - n_in24p3;
		n_out24p0 = n_in24p3 + __output_range * ((n_out12p0 - n_in24p1) / __input_range);
	}


// Output:0
	ALBEDO = n_out33p0;
	ROUGHNESS = n_out23p0;
	SPECULAR = n_out24p0;


}
"
graph_offset = Vector2(-1.96936, -226.165)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_n2sr7")
nodes/vertex/2/position = Vector2(-60, 100)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 6)
nodes/fragment/0/position = Vector2(1680, 280)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_o6kx7")
nodes/fragment/3/position = Vector2(240, -100)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_v6n02")
nodes/fragment/4/position = Vector2(-525.988, 36.9497)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_yqr76")
nodes/fragment/5/position = Vector2(-785.988, 16.9497)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_cvl0p")
nodes/fragment/6/position = Vector2(-1165.99, 36.9497)
nodes/fragment/8/node = SubResource("VisualShaderNodeCustom_4yr71")
nodes/fragment/8/position = Vector2(-625.988, 216.95)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_wnvm7")
nodes/fragment/10/position = Vector2(-465.988, 176.95)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_s3nyb")
nodes/fragment/11/position = Vector2(-365.988, 16.9497)
nodes/fragment/12/node = SubResource("VisualShaderNodeClamp_t6nnu")
nodes/fragment/12/position = Vector2(-5.98792, 156.95)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_i2cui")
nodes/fragment/13/position = Vector2(-905.988, 256.95)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatParameter_0rotw")
nodes/fragment/14/position = Vector2(-1085.99, 456.95)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_k3j8c")
nodes/fragment/15/position = Vector2(-185.988, 216.95)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_gqvg7")
nodes/fragment/16/position = Vector2(-305.988, 336.95)
nodes/fragment/17/node = SubResource("VisualShaderNodeDistanceFade_na2h7")
nodes/fragment/17/position = Vector2(-465.988, 716.95)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatParameter_f8opu")
nodes/fragment/18/position = Vector2(-725.988, 716.95)
nodes/fragment/19/node = SubResource("VisualShaderNodeCustom_bdsm0")
nodes/fragment/19/position = Vector2(-585.988, 396.95)
nodes/fragment/20/node = SubResource("VisualShaderNodeRemap_vb75y")
nodes/fragment/20/position = Vector2(-305.988, 496.95)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorCompose_sn8l0")
nodes/fragment/21/position = Vector2(-807.983, 514.827)
nodes/fragment/22/node = SubResource("VisualShaderNodeTexture2DParameter_62r0e")
nodes/fragment/22/position = Vector2(-440, -340)
nodes/fragment/23/node = SubResource("VisualShaderNodeRemap_x1vo2")
nodes/fragment/23/position = Vector2(240, 280)
nodes/fragment/24/node = SubResource("VisualShaderNodeRemap_w6riw")
nodes/fragment/24/position = Vector2(194.012, 476.95)
nodes/fragment/25/node = SubResource("VisualShaderNodeBooleanParameter_cycpp")
nodes/fragment/25/position = Vector2(960, -80)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatParameter_m7iju")
nodes/fragment/26/position = Vector2(700, -140)
nodes/fragment/27/node = SubResource("VisualShaderNodeVec2Parameter_vsbir")
nodes/fragment/27/position = Vector2(500, -700)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorDistance_qjjei")
nodes/fragment/28/position = Vector2(800, -440)
nodes/fragment/29/node = SubResource("VisualShaderNodeInput_542jw")
nodes/fragment/29/position = Vector2(120, -520)
nodes/fragment/30/node = SubResource("VisualShaderNodeStep_b0v08")
nodes/fragment/30/position = Vector2(1120, -240)
nodes/fragment/31/node = SubResource("VisualShaderNodeFloatOp_jl4i7")
nodes/fragment/31/position = Vector2(1300, -80)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatOp_xqjf5")
nodes/fragment/32/position = Vector2(1480, 0)
nodes/fragment/33/node = SubResource("VisualShaderNodeMix_7i2om")
nodes/fragment/33/position = Vector2(1400, 160)
nodes/fragment/34/node = SubResource("VisualShaderNodeColorConstant_swr46")
nodes/fragment/34/position = Vector2(980, 220)
nodes/fragment/connections = PackedInt32Array(5, 1, 4, 0, 6, 0, 5, 0, 12, 0, 3, 0, 13, 0, 8, 2, 4, 0, 11, 0, 8, 0, 10, 0, 10, 0, 11, 1, 16, 0, 15, 1, 15, 0, 12, 0, 11, 0, 15, 0, 18, 0, 17, 0, 19, 0, 16, 0, 17, 0, 20, 0, 20, 0, 16, 1, 14, 0, 21, 0, 14, 0, 21, 1, 21, 0, 19, 2, 22, 0, 3, 2, 12, 0, 23, 0, 12, 0, 24, 0, 23, 0, 0, 3, 24, 0, 0, 4, 27, 0, 28, 0, 29, 0, 28, 1, 28, 0, 30, 0, 26, 0, 30, 1, 30, 0, 31, 0, 25, 0, 31, 1, 31, 0, 32, 0, 3, 0, 33, 0, 33, 0, 0, 0, 32, 0, 33, 2, 34, 0, 33, 1)
